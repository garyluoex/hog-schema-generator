package com.oath.hogs;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import com.oath.hogs.adapter.GraphqlInputAdapter;
import com.oath.hogs.adapter.yaml.YamlInputAdapter;
import java.io.File;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import org.junit.Before;
import org.junit.Test;

public class OlapSchemaGeneratorTest {
  private List<String> yamlFileLocations;
  private List<File> datasourceFile;
  private List<File> metricFile;
  private List<File> dimensionFiles;
  private File graphqlSourceSchemaFile;

  @Before
  public void setUp() throws Exception {
    this.yamlFileLocations =  Arrays.asList(
        "src/test/resources/platform.yaml",
        "src/test/resources/platformLine.yaml",
        "src/test/resources/platformOrder.yaml",
        "src/test/resources/platformAccount.yaml");
    this.datasourceFile = Collections.singletonList(new File("src/test/resources/datasources.yaml"));
    this.metricFile = Collections.singletonList(new File("src/test/resources/metrics.yaml"));
    this.dimensionFiles = yamlFileLocations.stream().map(File::new).collect(Collectors.toList());
    this.graphqlSourceSchemaFile =  new File("src/test/resources/test.graphqls");
  }

  @Test
  public void test() {
    GraphqlInputAdapter graphqlInputAdapter = new GraphqlInputAdapter(graphqlSourceSchemaFile);
    YamlInputAdapter yamlInputAdapter = new YamlInputAdapter(datasourceFile, dimensionFiles, metricFile);
    OlapSchemaGenerator olapSchemaGenerator = new OlapSchemaGenerator();

    String graphlResult = olapSchemaGenerator.buildTypeDefinitionString(graphqlInputAdapter);

    String yamlResult = olapSchemaGenerator.buildTypeDefinitionString(yamlInputAdapter);

    System.out.println(graphlResult);
    System.out.println(yamlResult);
  }
}
